{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "buy"
      ],
      "properties": {
        "buy": {
          "type": "object",
          "required": [
            "collection",
            "token_id"
          ],
          "properties": {
            "collection": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "unlist"
      ],
      "properties": {
        "unlist": {
          "type": "object",
          "required": [
            "collection",
            "token_id"
          ],
          "properties": {
            "collection": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "object",
          "required": [
            "collection",
            "price",
            "token_id"
          ],
          "properties": {
            "collection": {
              "type": "string"
            },
            "price": {
              "$ref": "#/definitions/Coin"
            },
            "token_id": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_or_update_collection"
      ],
      "properties": {
        "add_or_update_collection": {
          "type": "object",
          "required": [
            "collection_address",
            "config"
          ],
          "properties": {
            "collection_address": {
              "type": "string"
            },
            "config": {
              "$ref": "#/definitions/CollectionConfig"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_collection"
      ],
      "properties": {
        "remove_collection": {
          "type": "object",
          "required": [
            "collection"
          ],
          "properties": {
            "collection": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "propose_new_admin"
      ],
      "properties": {
        "propose_new_admin": {
          "type": "object",
          "properties": {
            "new_admin": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "claim_admin_role"
      ],
      "properties": {
        "claim_admin_role": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "CollectionConfig": {
      "type": "object",
      "required": [
        "royalty_fee_bps",
        "royalty_fee_recipient",
        "sell_denoms"
      ],
      "properties": {
        "royalty_fee_bps": {
          "type": "integer",
          "format": "uint16",
          "minimum": 0.0
        },
        "royalty_fee_recipient": {
          "type": "string"
        },
        "sell_denoms": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
