{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "total_shares_issued"
      ],
      "properties": {
        "total_shares_issued": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "total_pool_value"
      ],
      "properties": {
        "total_pool_value": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "shares_equivalent_value"
      ],
      "properties": {
        "shares_equivalent_value": {
          "type": "object",
          "required": [
            "shares"
          ],
          "properties": {
            "shares": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "user_shares_equivalent_value"
      ],
      "properties": {
        "user_shares_equivalent_value": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "deployed_amount"
      ],
      "properties": {
        "deployed_amount": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns the number of tokens that are available for deployment, considering the amount required for any pending withdrawals.",
      "type": "object",
      "required": [
        "available_for_deployment"
      ],
      "properties": {
        "available_for_deployment": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdrawal_queue_info"
      ],
      "properties": {
        "withdrawal_queue_info": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Number of tokens that needs to be provided to the contract in order to fund all pending withdrawal requests that have not been funded yet.",
      "type": "object",
      "required": [
        "amount_to_fund_pending_withdrawals"
      ],
      "properties": {
        "amount_to_fund_pending_withdrawals": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns a list of withdrawal request IDs that have been marked as funded and are ready to be paid out to users, but have not been paid out yet.",
      "type": "object",
      "required": [
        "funded_withdrawal_requests"
      ],
      "properties": {
        "funded_withdrawal_requests": {
          "type": "object",
          "required": [
            "limit"
          ],
          "properties": {
            "limit": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns a list of withdrawal requests made by the given user.",
      "type": "object",
      "required": [
        "user_withdrawal_requests"
      ],
      "properties": {
        "user_withdrawal_requests": {
          "type": "object",
          "required": [
            "address",
            "limit",
            "start_from"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "start_from": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Returns a list of executed payouts for the given user.",
      "type": "object",
      "required": [
        "user_payouts_history"
      ],
      "properties": {
        "user_payouts_history": {
          "type": "object",
          "required": [
            "address",
            "limit",
            "order",
            "start_from"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "limit": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "order": {
              "$ref": "#/definitions/Order"
            },
            "start_from": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Order": {
      "type": "string",
      "enum": [
        "ascending",
        "descending"
      ]
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
