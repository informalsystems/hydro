{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "lock_tokens"
      ],
      "properties": {
        "lock_tokens": {
          "type": "object",
          "required": [
            "lock_duration"
          ],
          "properties": {
            "lock_duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "refresh_lock_duration"
      ],
      "properties": {
        "refresh_lock_duration": {
          "type": "object",
          "required": [
            "lock_duration",
            "lock_id"
          ],
          "properties": {
            "lock_duration": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "lock_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "unlock_tokens"
      ],
      "properties": {
        "unlock_tokens": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_proposal"
      ],
      "properties": {
        "create_proposal": {
          "type": "object",
          "required": [
            "description",
            "title",
            "tranche_id"
          ],
          "properties": {
            "description": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "tranche_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "proposal_id",
            "tranche_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "tranche_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_account_to_whitelist"
      ],
      "properties": {
        "add_account_to_whitelist": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_account_from_whitelist"
      ],
      "properties": {
        "remove_account_from_whitelist": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "update_max_locked_tokens"
      ],
      "properties": {
        "update_max_locked_tokens": {
          "type": "object",
          "required": [
            "max_locked_tokens"
          ],
          "properties": {
            "max_locked_tokens": {
              "type": "integer",
              "format": "uint128",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "pause"
      ],
      "properties": {
        "pause": {
          "type": "object",
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_tranche"
      ],
      "properties": {
        "add_tranche": {
          "type": "object",
          "required": [
            "tranche"
          ],
          "properties": {
            "tranche": {
              "$ref": "#/definitions/TrancheInfo"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_tranche"
      ],
      "properties": {
        "edit_tranche": {
          "type": "object",
          "required": [
            "tranche_id"
          ],
          "properties": {
            "tranche_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "tranche_metadata": {
              "type": [
                "string",
                "null"
              ]
            },
            "tranche_name": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "create_icqs_for_validators"
      ],
      "properties": {
        "create_icqs_for_validators": {
          "type": "object",
          "required": [
            "validators"
          ],
          "properties": {
            "validators": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "add_i_c_q_manager"
      ],
      "properties": {
        "add_i_c_q_manager": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "remove_i_c_q_manager"
      ],
      "properties": {
        "remove_i_c_q_manager": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "withdraw_i_c_q_funds"
      ],
      "properties": {
        "withdraw_i_c_q_funds": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "TrancheInfo": {
      "type": "object",
      "required": [
        "metadata",
        "name"
      ],
      "properties": {
        "metadata": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
