{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "TokenInfoProvidersResponse",
  "type": "object",
  "required": [
    "providers"
  ],
  "properties": {
    "providers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TokenInfoProvider"
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "Decimal": {
      "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
      "type": "string"
    },
    "DenomInfoResponse": {
      "type": "object",
      "required": [
        "denom",
        "ratio",
        "token_group_id"
      ],
      "properties": {
        "denom": {
          "type": "string"
        },
        "ratio": {
          "$ref": "#/definitions/Decimal"
        },
        "token_group_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TokenInfoProvider": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "lsm"
          ],
          "properties": {
            "lsm": {
              "$ref": "#/definitions/TokenInfoProviderLSM"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "base"
          ],
          "properties": {
            "base": {
              "$ref": "#/definitions/TokenInfoProviderBase"
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "derivative"
          ],
          "properties": {
            "derivative": {
              "$ref": "#/definitions/TokenInfoProviderDerivative"
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "TokenInfoProviderBase": {
      "type": "object",
      "required": [
        "denom",
        "ratio",
        "token_group_id"
      ],
      "properties": {
        "denom": {
          "type": "string"
        },
        "ratio": {
          "$ref": "#/definitions/Decimal"
        },
        "token_group_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TokenInfoProviderDerivative": {
      "type": "object",
      "required": [
        "cache",
        "contract"
      ],
      "properties": {
        "cache": {
          "type": "object",
          "additionalProperties": false
        },
        "contract": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "TokenInfoProviderLSM": {
      "type": "object",
      "required": [
        "cache",
        "contract",
        "hub_transfer_channel_id"
      ],
      "properties": {
        "cache": {
          "type": "object",
          "additionalProperties": false
        },
        "contract": {
          "type": "string"
        },
        "hub_transfer_channel_id": {
          "type": "string"
        }
      },
      "additionalProperties": false
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "ValidatorInfo": {
      "type": "object",
      "required": [
        "address",
        "delegated_tokens",
        "power_ratio"
      ],
      "properties": {
        "address": {
          "type": "string"
        },
        "delegated_tokens": {
          "$ref": "#/definitions/Uint128"
        },
        "power_ratio": {
          "$ref": "#/definitions/Decimal"
        }
      },
      "additionalProperties": false
    }
  }
}
